Planned for v3.1:
 - Check functional/non-functional property values and decide on behaviour
 - remove the fixed filenames for annotations, and implement a mechanism
   (possibly based on owl:import) for remembering the links between data
   and annotations.
 - Decide and implement behaviour when using unfaceted annotation schema 
 - Decide and implement behaviour when adding/removing data schema, esp.
   with respect to auto-created facets
 - Remaking auto-created facets should never delete user-added data. Grey
   out and let the user make the final decision
 - Decide and implement behaviour when changing the annotation schema 

Planned near future features:
 - Develop non-tree facets, such as graphs

Planned future changes:
 - finalize the DL inference pipeline, making everything properties-configurable
 - extend to pipelines for preference and ling annotations
 - Make it possible to re-combine annotations and ontologies.
 - Factor UI strings out of the code and use standard localization mechanisms.
 
 And beyond:
 - Remove the distinction between user and system models and develop an RDF
   schema for describing stereotype features.
 - Separate stereotype features from preference profiles.
 - Develop a mechanism for attribute vocabularies (besides interest) and
   registries of tools that understand each term.
 - Design a new RDF vocabulary for annotations, transformable back to owlnl:
   among others: allow for filler regranulation (e.g. say the 19th c. instead of 1821)
   depending on the importance of a specific date and the user type (e.g. experts get
   exact dates)
 - Initialize from rdf:label and abstract names, assuming classes are nouns and
   properties are verbs


16 Jun 2014, Version 3.0

Major extension, porting ELEON to a new domain: the annotation of datasets
and data sources using the VoID vocabulary and Sevod, its SemaGrow extension.



17 Jun 2011, Version 2.0

Updates Jena to 2.6.4

Fixes bugs noticed by Nikos Papanelopoulos:
 * Erroneously restoring taxonomy when saving in OWL/RDF
 * Delete concept functionality unavailable in Greek UI 


Aug 2009, Version 2.0-beta01

Defines a mechanism for external inference components:
 * Defines the OntoExtension interface of components that complete the ontology model
 * Collects all the various OWL axioms that previous ELEON versions implemented into
   the .struct.MicroReasoner class, which implements OntoExtension
 
Other:
 * Upgrades to Jena 2.6.0, and replaces ELEON code using deprecated Jena calls.
 * Fixes filename and namespace errors between ELEON and NaturalOWL.   
 * build.xml creates executable jar
 * Javadocs (TODO: write recipe in build.xml)


5 Mar 2009, Version 1.1

This version mostly sees a major code refactoring, separating GUI from
core functionality. It also includes the following fixes:
 * Extends user models to generic generation profiles. 
 * Complete URIs are preserved and not only local names. Entities with
   foreign URIs (different prefix than current base) cannot be edited,
   but are treated as imported vocabularies.
 * Entity names are case-sensitively compared.
 * Having as domain the union of named classes, makes a property
   appear on the panel of all classes in the union.
 * Upon importing an rdf:Property, ELEON tries to infer whether it is
   a datatype or an object property from rdf:range triples and from fillers
   in existing triples of this property.
 * Greek language strings have been converted to UTF-8.
   

10 Jun 2008, Version 1.0

The first public release of ELEON.
Main points of ELEON functionality:
 * Create for scratch or import OWL ontologies
 * Annotate OWL ontologies with linguistic elements (nouns, verbs,
   microplans)
 * Create user models
 * Connect to Natural Language Generation Engines to generate previews
 * Connect to Description Logic inference engines for ontology
   checking
 * Connect to relational databases for retrieving ontology instances
 * Supports English, Greek and Italian

